---
title: "HW 3 Drafting Viz"
author: "Ian Morris-Sibaja"
date: last-modified
format:
  html:
    embed-resources: true
warning: false
message: false
---

# Can't spell Disaster without... Pisaster??

Pisaster are keystone species in the intertidal zone. They are a type of sea star that are known to be voracious predators of mussels. When Pisaster are present, they can control the population of mussels, which in turn can have cascading effects on the rest of the ecosystem.

## 1. Which option do you plan to pursue? Itâ€™s okay if this has changed since HW #1.

I plan to remain pursuing option 1.

## 2. Restate your question(s). Has this changed at all since HW #1? If yes, how so?

The overall question of: How have Pisaster, a Sea Star Genus, been affected by changing environments over the past 20 years? My three subquestions include: How has the abundance of Pisaster species changed over time in California?, How has the distribution of Pisaster species changed over time in California?, and How has the presence of Pisaster species changed over time in California?

This has been a more specified question since HW #1. I have decided to focus on Pisaster species specifically, as they are a keystone species in the intertidal zone, rather than all coastal species.

## 3. Explain which variables from your data set(s) you will use to answer your question(s), and how.

I plan to clean my data to species, year, longitude, and latitude. I will then group by and summarise totals to get a count of each species by year and bin both year and latitude. Then I will plot these to visualize their changes.

## 4. Inspirational Visualizations and explain which elements you might borrow

![WE MUST PROTECT MARINE ENVIRONMENTS](images/info1.png)

I like how the colors are seperating the brochure in 3rds. It is pleasing to the eyes and will work well with three subquestions.

![WE MUST PROTECT MARINE ENVIRONMENTS](images/info2.jpg)

I like how the colors fill up the animal outline, I think it can help me portay abundance wihin this context.

## 5. Hand-draw your anticipated visualizations

![Mock Up](images/mockup.png)

## Set Up

```{r}
#| echo: false
#| warning: false
#| message: false
# Load packages 
library(tidyverse)
library(here)
library(sf)
library(gganimate)
library(sysfonts)
library(rnaturalearth)  
library(rnaturalearthdata)
library(zoo)
library(ggimage)
library(scales)
library(readxl)
library(ggtext)
```


```{r}
sysfonts::font_add_google("Slackey")
sysfonts::font_add_google("Inter")
```

```{r}
# SpongeBob color palette
# Define your colors
colors <- c(
  "Purple" = "#56446E", 
  "Light Purple" = "#C187D4",
  "Blue" = "#859ED7",      
  "Gold" = "#CEA940",    
  "Pink" = "#CB6D75",    
  "Green" = "#2A584C",
  "Sand" = "#F2F0DF",
  "Black" = "#49484D"
)

# Custom SpongeBob Theme - without background image
theme_spongebob <- function() {
  theme_minimal(base_size = 14) +
    theme(
      text = element_text(family = "Slackey", color = colors["Black"]),
      axis.title = element_text(face = "bold"),
      axis.text = element_text(face = "italic"),
      legend.text = element_text(face = "bold"),
      panel.background = element_blank(),
      plot.background = element_rect(fill = "transparent", color = "transparent"),  # Use a color, not an image path
      panel.grid.major = element_blank(),
      panel.grid.minor = element_blank(),
      legend.box.background = element_rect(fill='transparent'),
      panel.border = element_blank()
    )
}
```


## Data Import

```{r}
# Read in three excel files from MARINe biodiversity data 
point_contact_raw <- read_excel(here('data', 'MARINe_biodiversity_data',
                                     'cbs_data_CA_2023.xlsx'), sheet = 'point_contact_summary_data')
quadrat_raw <- read_excel(here('data', 'MARINe_biodiversity_data',
                               'cbs_data_CA_2023.xlsx'), sheet = 'quadrat_summary_data')
swath_raw <- read_excel(here('data', 'MARINe_biodiversity_data',
                             'cbs_data_CA_2023.xlsx'), sheet = 'swath_summary_data')

# Read in Dangermond preserve shape file 
dangermond <- read_sf(here('data', 'dangermond_shapefile', 'jldp_boundary.shp'))

# Read in California state boundary 
california <- spData::us_states %>% 
  filter(NAME == "California")
```

## Data Cleaning

Lots of cleaning based on our capston project

```{r}
# Clean point_contact dataset 
point_contact_clean <- point_contact_raw %>% 
  # Remove non-matching columns 
  select(!c('number_of_transect_locations', 'percent_cover')) %>% 
  # Rename num of hits to total count 
  rename(total_count = number_of_hits) %>% 
  # Create new data collection source column 
  mutate(collection_source = "point contact") %>% 
  # Remove certain species lumps 
  filter(!species_lump %in% c("Rock", "Sand", "Tar", "Blue Green Algae", "Red Crust", "Diatom", "Ceramiales"))

# Clean quadrat dataset 
quadrat_clean <- quadrat_raw %>% 
  # Remove non-matching columns 
  select(!c('number_of_quadrats_sampled', 'total_area_sampled_m2', 'density_per_m2')) %>% 
  # Create new data collection source column 
  mutate(collection_source = "quadrat") %>% 
  # Remove certain species lumps 
  filter(!species_lump %in% c("Rock", "Sand", "Tar", "Blue Green Algae", "Red Crust", "Diatom", "Ceramiales"))

# Clean swath dataset 
swath_clean <- swath_raw %>% 
  # Remove non-matching columns 
  select(!c('number_of_transects_sampled', 'est_swath_area_searched_m2',  'density_per_m2')) %>% 
  # Create new data collection source column 
  mutate(collection_source = "swath") %>% 
  # Remove certain species lumps 
  filter(!species_lump %in% c("Rock", "Sand", "Tar", "Blue Green Algae", "Red Crust", "Diatom", "Ceramiales"))
```

#### Merge datasets

Merge data sets for easy calculations

```{r}
# Merge the 3 dataset together

biodiv_merge <- bind_rows(point_contact_clean, quadrat_clean, swath_clean) %>% 
  filter(year<2021,
         year>2000)
```

#### California Data

```{r}
# Convert to WGS84 to lat long
california <- st_transform(california, crs = 4326)
```

#### Convert biodiv data to sf object

```{r}
purple_df <- biodiv_merge %>% 
  filter(total_count >= 1,
         species_lump  %in% c("Pisaster ochraceus",
                              "Strongylocentrotus purpuratus"#,
                              #"Mytilus californianus"
         )) %>%  
  mutate(
    mpa = case_when(
      mpa_designation == "NONE" ~ FALSE,
      TRUE ~ TRUE
    ),
    region = case_when(
      latitude <= 34.44 ~ "South",
      latitude > 34.44 & latitude <= 37.82 ~ "Central",
      latitude > 37.82 ~ "North"
    )
  ) %>% 
  mutate(year_bin = round(year/5) * 5) %>% 
  st_as_sf(coords = c("longitude", "latitude"), crs = st_crs(california), remove = FALSE) %>% 
  mutate(region = factor(region, levels = c("North", "Central", "South")))

# Check that the crs matches 
if(st_crs(california) == st_crs(purple_df)) {
  print("The coordinate reference systems match")
} else {
  print("The coordinate reference systems do NOT match. Transformation of CRS is recommended.")
}
```


#### MPA relative abundance

```{r}
purple_sum <- purple_df %>% 
  group_by(species_lump, year, mpa) %>% 
  summarise(num_count = sum(total_count)) 
```

```{r}
# Apply smoothing beforehand
showtext::showtext_auto()
showtext::showtext_opts(dpi = 250)
smoothed_data <- purple_sum %>%
  group_by(species_lump, mpa) %>%
  mutate(num_count_smooth = predict(loess(num_count ~ year, span = 0.5)))

# Plot the smoothed data
p2 <- ggplot(smoothed_data, aes(x = year, y = num_count_smooth, 
                          fill = factor(species_lump, 
                                        levels = c("Strongylocentrotus purpuratus",
                                                   "Pisaster ochraceus")))) +  
  facet_wrap(~mpa, 
             labeller = labeller(
               mpa = c("TRUE" = "MPAs", "FALSE" = "non MPAs" )
             )) +
  geom_area(position = "fill") +  
  scale_fill_manual(values = c("Pisaster ochraceus" = "#56446E" , 
                               "Strongylocentrotus purpuratus" = "#C187D4" 
  )) +
  labs(
    x = "Year",
    y = "Relative Abundance",
    fill = "Species"
  ) +
  scale_y_continuous(breaks=c(.5,1), labels = scales::percent) +
  scale_x_continuous(breaks=c(2001, 2010, 2020)) +
  coord_flip() +
  theme_spongebob() +
  theme(
    axis.ticks.x = element_line(color = colors["Purple"]),
    axis.ticks.length = unit(3, "pt"),
    axis.title.y = element_blank(),
    axis.text = element_text(size=16, margin = margin(8,8,8,8, "pt")),
    axis.title = element_markdown(size = 18, color = colors["Black"], margin = margin(25, 0, 0, 0)),
    panel.grid.major = element_blank(),
    legend.position = "none", 
    plot.title.position = "plot", 
    plot.margin = margin(1, 1, 1, 1, "cm"),  # Increased margins
    panel.spacing = unit(3, "lines"),  # Increased panel spacing
    plot.title = element_markdown(hjust = .5, vjust = 0, size = 22, color = colors["Purple"], 
                              margin = margin(0, 0, 20, 0, "pt")),  # Added bottom margin to title
    plot.subtitle = element_text(hjust = .5, vjust = 0, size = 22, color = colors["Green"],
                             margin = margin(0, 0, 25, 0, "pt")),  # Added bottom margin to subtitle
    strip.text = element_text(hjust = .5, vjust = 0, size = 18, color = colors["Blue"])
  ) 

ggsave(filename=here("images/rel_abund.png"), width = 20, height = 16, units = "cm", dpi = 300)

p2
```



#### Latitudinal Shift Map

```{r}
# Load California map
california <- ne_states(country = "United States of America", returnclass = "sf") %>% 
  filter(name == "California") %>% 
  st_transform(crs = 4326)
```

```{r}
centroids <- purple_df %>%
  # find average location by region and species
  group_by(year, region, species_lump) %>%  
  summarize(lon = mean(longitude, na.rm = TRUE),  
            lat = mean(latitude, na.rm = TRUE)) %>% 
  ungroup() %>% 
  # interpolate missing data for smooth transitions
  complete(year, region, species_lump, fill = list(lon = NA, lat = NA)) %>%
  group_by(region, species_lump) %>% 
  mutate(lon = na.approx(lon, na.rm = FALSE),  
         lat = na.approx(lat, na.rm = FALSE)) %>%  
  ungroup()
```

```{r}
centroids_draft <- centroids 

p1 <- ggplot() +
  # Add California map
  geom_sf(data = california, fill = "#b8dab3") + 
  
  geom_image(data = centroids_draft %>% 
               filter(species_lump == "Strongylocentrotus purpuratus"),
             image = here("images", "purple-urchin.png"),
             aes(x = lon, y = lat, group = region, color = species_lump), size = .07) + 
  
  geom_image(data = centroids_draft %>%
               filter(species_lump == "Strongylocentrotus purpuratus"),
             image = here("images", "purple-urchin.png"),
             aes(x = lon, y = lat, group = region), size = .06) +
  
  geom_image(data = centroids_draft %>% 
               filter(species_lump == "Pisaster ochraceus"),
             image = here("images", "purple-sea-star.png"),
             aes(x = lon, y = lat, color = species_lump, group = region), size = .11) +
  
  geom_image(data = centroids_draft %>%
               filter(species_lump == "Pisaster ochraceus"),
             image = here("images", "purple-sea-star.png"),
             aes(x = lon, y = lat, group = region), size = .1) +
  
  scale_color_manual(values = c("Pisaster ochraceus" = "#859ED7", 
                                "Strongylocentrotus purpuratus" = "#859ED7")) +
  
  
  geom_hline(yintercept=34.44, linetype="dashed", color = colors["Blue"]) +
  
  geom_hline(yintercept=37.82, linetype="dashed", color = colors["Blue"]) +
  
  annotate("text", x=-122.75, y=39.5, hjust=0, vjust=0, 
           label = "North\nCoast", 
           family="Slackey", color=colors["Purple"]) +
  annotate("text", x=-120, y=35.5, hjust=0, vjust=0, 
           label = "Central\nCoast", 
           family="Slackey", color=colors["Purple"]) +
  annotate("text", x=-117.25, y=33, hjust=0, vjust=0, 
           label = "South\nCoast", 
           family="Slackey", color=colors["Purple"]) +
  
  labs(title = "{frame_time}") +
  theme_spongebob() +
  theme(
    axis.title = element_blank(),
    axis.text = element_blank(),
    panel.grid.major = element_blank(),
    legend.position = "none", 
    plot.title.position = "plot", 
    plot.title = element_text(hjust = .22, vjust = 0, size = 12, color = colors["Purple"])
  ) +
  
  # Animate over years
  transition_time(as.integer(year)) +
  ease_aes("linear")

# Render animation (uncomment to run)
#animate(p1, fps = 20, res = 200, height = 480, width = 480, duration=11, bg = 'transparent')
#anim_save(here("images/distributions.gif"))
```


```{r}
ggplot() +
  # Add California map
  geom_sf(data = california, fill = "#b8dab3") + 
  
  geom_image(data = centroids_draft %>% 
               filter(year==2016) %>% 
               filter(species_lump == "Strongylocentrotus purpuratus"),
             image = here("images", "purple-urchin.png"),
             aes(x = lon, y = lat, group = region, color = species_lump), size = .07) + 
  
  geom_image(data = centroids_draft %>%
               filter(year==2016) %>% 
               filter(species_lump == "Strongylocentrotus purpuratus"),
             image = here("images", "purple-urchin.png"),
             aes(x = lon, y = lat, group = region), size = .06) +
  
  geom_image(data = centroids_draft %>% 
               filter(year==2016) %>% 
               filter(species_lump == "Pisaster ochraceus"),
             image = here("images", "purple-sea-star.png"),
             aes(x = lon, y = lat, color = species_lump, group = region), size = .11) +
  
  geom_image(data = centroids_draft %>%
               filter(year==2016) %>% 
               filter(species_lump == "Pisaster ochraceus"),
             image = here("images", "purple-sea-star.png"),
             aes(x = lon, y = lat, group = region), size = .1) +
  
  scale_color_manual(values = c("Pisaster ochraceus" = "#859ED7", 
                                "Strongylocentrotus purpuratus" = "#859ED7")) +
  
  
  geom_hline(yintercept=34.44, linetype="dashed", color = colors["Blue"]) +
  
  geom_hline(yintercept=37.82, linetype="dashed", color = colors["Blue"]) +
  
  annotate("text", x=-122.75, y=39.5, hjust=0, vjust=0, 
           label = "North\nCoast", 
           family="Slackey", color=colors["Purple"]) +
  annotate("text", x=-120, y=35.5, hjust=0, vjust=0, 
           label = "Central\nCoast", 
           family="Slackey", color=colors["Purple"]) +
  annotate("text", x=-117.25, y=33, hjust=0, vjust=0, 
           label = "South\nCoast", 
           family="Slackey", color=colors["Purple"]) +
  
  labs(title = "{frame_time}") +
  theme_spongebob() +
  theme(
    axis.title = element_blank(),
    axis.text = element_blank(),
    panel.grid.major = element_blank(),
    legend.position = "none", 
    plot.title.position = "plot", 
    plot.title = element_text(hjust = .22, vjust = 0, size = 12, color = colors["Purple"])
  )
```


## Abosolute plot

```{r}
showtext::showtext_auto()
showtext::showtext_opts(dpi = 250)
# Compute total_count_sum first using summarise()
pisaster_sum_perc <- purple_df %>%
  group_by(species_lump, year_bin) %>%
  summarise(total_count_sum = sum(total_count, na.rm = TRUE), .groups = "drop") 


# Plot with corrected normalized count
p3 <- ggplot(pisaster_sum_perc, aes(x = year_bin, y = total_count_sum, 
                              fill = factor(species_lump, 
                                        levels = c("Strongylocentrotus purpuratus",
                                                   "Pisaster ochraceus")))) +
  geom_col(position = "stack") +  # Dodge to see separate species
  scale_fill_manual(labels = c("Purple Sea Star", "Purple Sea Urchin"),
                    values = c("Pisaster ochraceus" = "#56446E", 
                               "Strongylocentrotus purpuratus" = "#C187D4"
  )) +
  labs(
    #title = "<span style='color:#56446E;'>Purple Sea Stars</span>
    #<span style='color:#49484D;'>**vs**</span>
    #<span style='color:#C187D4;'>Purple Urchins</span>
    #</span>",
    #subtitle = "Populations recover asymetrically after shock",
    x = "Year",
    y = "Total Counts",
    fill = "Species"
  ) +
  coord_flip() +
  scale_y_continuous(labels = unit_format(unit = "k", scale = 1e-3)) +
  theme_spongebob() +
  theme(
    axis.ticks.x = element_line(color = colors["Purple"]),
    axis.ticks.length = unit(3, "pt"),
    plot.subtitle = element_markdown(hjust=.5, color=colors["Green"]),
    axis.title.y = element_blank(),
    axis.title.x = element_text(color=colors["Black"]),
    legend.position = "none",
    panel.grid.minor = element_blank(),
    axis.text = element_text(size = 16, color=colors["Black"]),
    axis.title = element_markdown(size = 18),
    plot.title = element_markdown(size = 20, face = "bold", hjust = .5),
    theme(aspect.ratio=3/5)
  ) 
#ggsave(filename=here("images/abundance.png"), width = 17, height = 13, units = "cm", dpi = 300)
p3
#ggbackground(p3, here("images", "sand.jpg"))
```

